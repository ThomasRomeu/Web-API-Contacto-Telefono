// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using thomasRomeu_PrimerParcial.Entities;

#nullable disable

namespace thomasRomeu_PrimerParcial.Migrations
{
    [DbContext(typeof(ContactoDbContext))]
    [Migration("20230413225424_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("thomasRomeu_PrimerParcial.Entities.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContacto"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContacto");

                    b.ToTable("Contactos");

                    b.HasData(
                        new
                        {
                            IdContacto = 1,
                            Apellido = "Ferez",
                            Nombre = "Ludmila",
                            NumeroDocumento = 42442367,
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            IdContacto = 2,
                            Apellido = "Romeu",
                            Nombre = "Gianluca",
                            NumeroDocumento = 42567249,
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            IdContacto = 3,
                            Apellido = "Romeu",
                            Nombre = "Joaquin",
                            NumeroDocumento = 43190425,
                            TipoDocumento = "DNI"
                        });
                });

            modelBuilder.Entity("thomasRomeu_PrimerParcial.Entities.Telefono", b =>
                {
                    b.Property<int>("IdTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTelefono"));

                    b.Property<int>("ContactoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.Property<string>("TipoTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTelefono");

                    b.HasIndex("ContactoId");

                    b.ToTable("Telefonos");

                    b.HasData(
                        new
                        {
                            IdTelefono = 1,
                            ContactoId = 1,
                            NumeroTelefono = 1125245672,
                            TipoTelefono = "Celular"
                        },
                        new
                        {
                            IdTelefono = 2,
                            ContactoId = 2,
                            NumeroTelefono = 1125245672,
                            TipoTelefono = "Celular"
                        },
                        new
                        {
                            IdTelefono = 3,
                            ContactoId = 3,
                            NumeroTelefono = 46228527,
                            TipoTelefono = "Fijo"
                        });
                });

            modelBuilder.Entity("thomasRomeu_PrimerParcial.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            nombreUsuario = "tromeu",
                            password = "4622"
                        });
                });

            modelBuilder.Entity("thomasRomeu_PrimerParcial.Entities.Telefono", b =>
                {
                    b.HasOne("thomasRomeu_PrimerParcial.Entities.Contacto", "Contacto")
                        .WithMany("Telefonos")
                        .HasForeignKey("ContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");
                });

            modelBuilder.Entity("thomasRomeu_PrimerParcial.Entities.Contacto", b =>
                {
                    b.Navigation("Telefonos");
                });
#pragma warning restore 612, 618
        }
    }
}
